const confusingBrowserGlobals = require('confusing-browser-globals');

module.exports = {
    plugins: [
        'import',
    ],

    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            generators: true,
            objectLiteralDuplicateProperties: false,
        },
    },

    env: {
        es6: true,
        node: true,
    },

    rules: {
        // best-practices
        'accessor-pairs': 'off',
        'array-callback-return': 'error',
        'block-scoped-var': 'error',
        'complexity': [ 'off', 11 ],
        'class-methods-use-this': [ 'error', { exceptMethods: [] } ],
        'consistent-return': 'error',
        'curly': [ 'error', 'all' ],
        'default-case': [ 'error', { commentPattern: '^no default$' } ],
        'dot-notation': [ 'error', { allowKeywords: true } ],
        'dot-location': [ 'error', 'property' ],
        'eqeqeq': [ 'error', 'always', { 'null': 'ignore' } ],
        'guard-for-in': 'warn',
        'max-classes-per-file': [ 'warn', 1 ],
        'no-alert': 'warn',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-div-regex': 'off',
        'no-else-return': 'error',
        'no-empty-function': [ 'error', { allow: [ 'arrowFunctions', 'functions', 'methods' ] } ],
        'no-empty-pattern': 'error',
        'no-eq-null': 'off',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-fallthrough': 'error',
        'no-floating-decimal': 'error',
        'no-global-assign': [ 'error', { exceptions: [] } ],
        'no-native-reassign': 'warn',
        'no-implicit-coercion': [ 'off', { 'boolean': false, number: true, string: true, allow: [] } ],
        'no-implicit-globals': 'off',
        'no-implied-eval': 'error',
        'no-invalid-this': 'off',
        'no-iterator': 'error',
        'no-labels': [ 'error', { allowLoop: false, allowSwitch: false } ],
        'no-lone-blocks': 'error',
        'no-loop-func': 'error',
        'no-magic-numbers': [ 'off', { ignore: [], ignoreArrayIndexes: true, enforceConst: true, detectObjects: false } ],
        'no-multi-spaces': 'warn',
        'no-multi-str': 'warn',
        'no-new': 'error',
        'no-new-func': 'error',
        'no-new-wrappers': 'error',
        'no-octal': 'error',
        'no-octal-escape': 'error',
        'no-param-reassign': [ 'warn', { props: false } ],
        'no-proto': 'error',
        'no-redeclare': 'error',
        'no-restricted-properties': [
            'error',
            {
                object: 'arguments',
                property: 'callee',
                message: 'arguments.callee is deprecated',
            },
            {
                object: 'global',
                property: 'isFinite',
                message: 'Please use Number.isFinite instead',
            },
            {
                object: 'self',
                property: 'isFinite',
                message: 'Please use Number.isFinite instead',
            },
            {
                object: 'window',
                property: 'isFinite',
                message: 'Please use Number.isFinite instead',
            },
            {
                object: 'global',
                property: 'isNaN',
                message: 'Please use Number.isNaN instead',
            },
            {
                object: 'self',
                property: 'isNaN',
                message: 'Please use Number.isNaN instead',
            },
            {
                object: 'window',
                property: 'isNaN',
                message: 'Please use Number.isNaN instead',
            },
            {
                property: '__defineGetter__',
                message: 'Please use Object.defineProperty instead.',
            },
            {
                property: '__defineSetter__',
                message: 'Please use Object.defineProperty instead.',
            },
            {
                object: 'Math',
                property: 'pow',
                message: 'Use the exponentiation operator (**) instead.',
            }
        ],
        'no-return-assign': [ 'error', 'always' ],
        'no-return-await': 'error',
        'no-script-url': 'error',
        'no-self-assign': [ 'error', { props: true } ],
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unmodified-loop-condition': 'off',
        'no-unused-expressions': [ 'error', { allowShortCircuit: false, allowTernary: false, allowTaggedTemplates: false } ],
        'no-unused-labels': 'error',
        'no-useless-call': 'off',
        'no-useless-catch': 'error',
        'no-useless-concat': 'error',
        'no-useless-escape': 'error',
        'no-useless-return': 'error',
        'no-void': 'error',
        'no-warning-comments': [ 'off', { terms: [ 'todo', 'fixme', 'xxx' ], location: 'start' } ],
        'no-with': 'error',
        'prefer-promise-reject-errors': [ 'error', { allowEmptyReject: true } ],
        'prefer-named-capture-group': 'off',
        'radix': 'error',
        'require-await': 'off',
        'require-unicode-regexp': 'off',
        'vars-on-top': 'error',
        'wrap-iife': [ 'error', 'outside', { functionPrototypeMethods: false } ],
        'yoda': [ 'error', 'never', { exceptRange: false, onlyEquality: false } ],

        // errors
        'for-direction': 'off',
        'getter-return': [ 'error', { allowImplicit: false } ],
        'no-async-promise-executor': 'error',
        'no-await-in-loop': 'error',
        'no-compare-neg-zero': 'error',
        'no-cond-assign': [ 'error', 'always' ],
        'no-console': 'warn',
        'no-constant-condition': 'warn',
        'no-control-regex': 'error',
        'no-debugger': 'error',
        'no-dupe-args': 'error',
        'no-dupe-keys': 'error',
        'no-duplicate-case': 'error',
        'no-empty': 'error',
        'no-empty-character-class': 'error',
        'no-ex-assign': 'error',
        'no-extra-boolean-cast': 'error',
        'no-extra-parens': [ 'off', 'all', { conditionalAssign: true, nestedBinaryExpressions: false, returnAssign: false, ignoreJSX: 'all', enforceForArrowConditionals: false } ],
        'no-extra-semi': 'error',
        'no-func-assign': 'error',
        'no-inner-declarations': 'error',
        'no-invalid-regexp': 'error',
        'no-irregular-whitespace': [ 'error', { skipStrings: true } ],
        'no-misleading-character-class': 'error',
        'no-obj-calls': 'error',
        'no-prototype-builtins': 'warn',
        'no-regex-spaces': 'error',
        'no-sparse-arrays': 'error',
        'no-template-curly-in-string': 'warn',
        'no-unexpected-multiline': 'error',
        'no-unreachable': 'error',
        'no-unsafe-finally': 'error',
        'no-unsafe-negation': 'error',
        'no-negated-in-lhs': 'off',
        'require-atomic-updates': 'warn',
        'use-isnan': 'error',
        'valid-jsdoc': 'off',
        'valid-typeof': [ 'error', { requireStringLiterals: true } ],

        // es2015
        'arrow-body-style': [ 'error', 'as-needed', { requireReturnForObjectLiteral: false } ],
        'arrow-parens': [ 'error', 'as-needed', { requireForBlockBody: true } ],
        'arrow-spacing': [ 'error', { before: true, after: true } ],
        'constructor-super': 'error',
        'generator-star-spacing': [ 'error', { before: false, after: true } ],
        'no-class-assign': 'error',
        'no-confusing-arrow': [ 'error', { allowParens: false } ],
        'no-const-assign': 'error',
        'no-dupe-class-members': 'error',
        'no-duplicate-imports': 'off',
        'no-new-symbol': 'error',
        'no-restricted-imports': [ 'off', { paths: [], patterns: [] } ],
        'no-this-before-super': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-constructor': 'error',
        'no-useless-rename': [ 'error', { ignoreDestructuring: false, ignoreImport: false, ignoreExport: false } ],
        'no-var': 'error',
        'object-shorthand': [ 'error', 'consistent' ],
        'prefer-arrow-callback': [ 'error', { allowNamedFunctions: false, allowUnboundThis: true } ],
        'prefer-const': [ 'warn', { destructuring: 'any', ignoreReadBeforeAssign: true } ],
        'prefer-destructuring': [ 'off', { VariableDeclarator: { array: false, object: true }, AssignmentExpression: { array: true, object: true } }, { enforceForRenamedProperties: false } ],
        'prefer-numeric-literals': 'error',
        'prefer-reflect': 'off',
        'prefer-rest-params': 'error',
        'prefer-spread': 'error',
        'prefer-template': 'warn',
        'require-yield': 'error',
        'rest-spread-spacing': [ 'error', 'never' ],
        'sort-imports': [ 'off', { ignoreCase: false, ignoreMemberSort: false, memberSyntaxSortOrder: [ 'none', 'all', 'multiple', 'single' ] } ],
        'symbol-description': 'error',
        'template-curly-spacing': 'error',
        'yield-star-spacing': [ 'error', 'after' ],

        // imports
        'import/no-unresolved': [ 'error', { commonjs: true, caseSensitive: true } ],
        'import/named': 'off',
        'import/default': 'off',
        'import/namespace': 'off',
        'import/export': 'error',
        'import/no-named-as-default': 'error',
        'import/no-named-as-default-member': 'error',
        'import/no-deprecated': 'off',
        'import/no-extraneous-dependencies': [ 'off', { devDependencies: [ 'test/**', 'tests/**', 'spec/**', '**/__tests__/**', 'test.{js,jsx}', 'test-*.{js,jsx}', '**/*.{test,spec}.{js,jsx}', '**/jest.config.js', '**/webpack.config.js', '**/webpack.config.*.js', '**/rollup.config.js', '**/rollup.config.*.js', '**/gulpfile.js', '**/gulpfile.*.js', '**/Gruntfile{,.js}', '**/protractor.conf.*.js' ], optionalDependencies: false } ],
        'import/no-mutable-exports': 'error',
        'import/no-commonjs': 'off',
        'import/no-amd': 'error',
        'import/no-nodejs-modules': 'off',
        'import/first': [ 'error', 'absolute-first' ],
        'import/imports-first': 'off',
        'import/no-duplicates': 'error',
        'import/no-namespace': 'off',
        'import/extensions': [ 'error', 'always', { js: 'never', jsx: 'never', ts: 'never', tsx: 'never', mjs: 'never' } ],
        'import/order': [ 'off', { groups: [ 'builtin', 'external', 'internal', 'parent', 'sibling', 'index' ], 'newlines-between': 'never' } ],
        'import/newline-after-import': 'error',
        'import/prefer-default-export': 'error',
        'import/no-restricted-paths': 'off',
        'import/max-dependencies': [ 'off', { max: 10 } ],
        'import/no-absolute-path': 'error',
        'import/no-dynamic-require': 'error',
        'import/no-internal-modules': [ 'off', { allow: [] } ],
        'import/unambiguous': 'off',
        'import/no-webpack-loader-syntax': 'error',
        'import/no-unassigned-import': 'off',
        'import/no-named-default': 'error',
        'import/no-anonymous-default-export': [ 'off', { allowArray: false, allowArrowFunction: false, allowAnonymousClass: false, allowAnonymousFunction: false, allowLiteral: false, allowObject: false } ],
        'import/exports-last': 'warn',
        'import/group-exports': 'warn',
        'import/no-default-export': 'off',
        'import/no-named-export': 'off',
        'import/no-self-import': 'error',
        'import/no-cycle': [ 'error', { maxDepth: Infinity } ],
        'import/no-useless-path-segments': 'error',
        'import/dynamic-import-chunkname': [ 'off', { importFunctions: [], webpackChunknameFormat: '[0-9a-zA-Z-_/.]+' } ],
        'import/no-relative-parent-imports': 'off',

        // node
        'callback-return': 'off',
        'global-require': 'warn',
        'handle-callback-err': 'off',
        'no-buffer-constructor': 'error',
        'no-mixed-requires': [ 'off', false ],
        'no-new-require': 'error',
        'no-path-concat': 'error',
        'no-process-env': 'off',
        'no-process-exit': 'off',
        'no-restricted-modules': 'off',
        'no-sync': 'off',

        // strict
        'strict': [ 'warn', 'global' ],

        // style
        'array-bracket-newline': [ 'off', { multiline: true, minItems: null } ],
        'array-element-newline': [ 'off', { multiline: true, minItems: null } ],
        'array-bracket-spacing': [ 'error', 'always' ],
        'block-spacing': [ 'error', 'always' ],
        'brace-style': [ 'error', 'stroustrup', { allowSingleLine: true } ],
        'camelcase': [ 'warn', { properties: 'always' } ],
        'capitalized-comments': [ 'off', 'never', { line: { ignorePattern: '.*', ignoreInlineComments: true, ignoreConsecutiveComments: true }, block: { ignorePattern: '.*', ignoreInlineComments: true, ignoreConsecutiveComments: true } } ],
        'comma-dangle': [ 'error', { arrays: 'always-multiline', objects: 'always-multiline', imports: 'always-multiline', exports: 'always-multiline', functions: 'always-multiline' } ],
        'comma-spacing': [ 'error', { before: false, after: true } ],
        'comma-style': [ 'error', 'last', { exceptions: { ArrayExpression: false, ArrayPattern: false, ArrowFunctionExpression: false, CallExpression: false, FunctionDeclaration: false, FunctionExpression: false, ImportDeclaration: false, ObjectExpression: false, ObjectPattern: false, VariableDeclaration: false, NewExpression: false, } } ],
        'computed-property-spacing': [ 'error', 'never' ],
        'consistent-this': [ 'warn', 'self' ],
        'eol-last': [ 'error', 'always' ],
        'func-call-spacing': [ 'error', 'never' ],
        'func-name-matching': [ 'off', 'always', { includeCommonJSModuleExports: false, considerPropertyDescriptor: true } ],
        'func-names': 'warn',
        'func-style': [ 'off', 'expression' ],
        'id-blacklist': 'off',
        'id-length': 'off',
        'id-match': 'off',
        'implicit-arrow-linebreak': [ 'error', 'beside' ],
        'indent': [ 'warn', 4, { flatTernaryExpressions: false, ignoredNodes: [ 'JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild' ], ignoreComments: false } ],
        'jsx-quotes': [ 'off', 'prefer-double' ],
        'key-spacing': [ 'error', { beforeColon: false, afterColon: true, mode: 'strict' } ],
        'keyword-spacing': [ 'error', { before: true, after: true, overrides: { 'return': { after: true }, 'throw': { after: true }, 'case': { after: true } } } ],
        'line-comment-position': [ 'off', { position: 'above', ignorePattern: '', applyDefaultPatterns: true } ],
        'linebreak-style': [ 'error', 'unix' ],
        'lines-between-class-members': [ 'error', 'always', { exceptAfterSingleLine: false } ],
        'lines-around-comment': 'off',
        'lines-around-directive': [ 'error', { before: 'always', after: 'always' } ],
        'max-depth': [ 'warn', 4 ],
        'max-len': [ 'warn', 120, 2, { ignoreUrls: true, ignoreComments: false, ignoreRegExpLiterals: true, ignoreStrings: true, ignoreTemplateLiterals: true } ],
        'max-lines': [ 'off', { max: 300, skipBlankLines: true, skipComments: true } ],
        'max-lines-per-function': [ 'warn', { max: 50, skipBlankLines: true, skipComments: true, IIFEs: true } ],
        'max-nested-callbacks': 'off',
        'max-params': [ 'warn', 5 ],
        'max-statements': [ 'off', 10 ],
        'max-statements-per-line': [ 'off', { max: 1 } ],
        'multiline-comment-style': [ 'off', 'starred-block' ],
        'multiline-ternary': [ 'off', 'never' ],
        'new-cap': [ 'error', { newIsCap: true, newIsCapExceptions: [], capIsNew: false, capIsNewExceptions: [ 'Immutable.Map', 'Immutable.Set', 'Immutable.List' ] } ],
        'new-parens': 'error',
        'newline-after-var': [ 'warn', 'always' ],
        'newline-before-return': 'warn',
        'newline-per-chained-call': [ 'warn', { ignoreChainWithDepth: 4 } ],
        'no-array-constructor': 'error',
        'no-bitwise': 'warn',
        'no-continue': 'off',
        'no-inline-comments': 'off',
        'no-lonely-if': 'error',
        'no-mixed-operators': [ 'error', { groups: [ [ '+', '-', '*', '/', '%', '**' ], [ '&', '|', '^', '~', '<<', '>>', '>>>' ], [ '==', '!=', '===', '!==', '>', '>=', '<', '<=' ], [ '&&', '||' ], [ 'in', 'instanceof' ] ], allowSamePrecedence: false } ],
        'no-mixed-spaces-and-tabs': 'error',
        'no-multi-assign': [ 'error' ],
        'no-multiple-empty-lines': [ 'error', { max: 2, maxEOF: 1 } ],
        'no-negated-condition': 'off',
        'no-nested-ternary': 'error',
        'no-new-object': 'error',
        'no-plusplus': 'warn',
        'no-restricted-syntax': [ 'warn', { selector: 'ForInStatement', message: 'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.' }, { selector: 'ForOfStatement', message: 'iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.' }, { selector: 'LabeledStatement', message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.' }, { selector: 'WithStatement', message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.' } ],
        'no-spaced-func': 'error',
        'no-tabs': 'error',
        'no-ternary': 'off',
        'no-trailing-spaces': [ 'error', { skipBlankLines: false, ignoreComments: false } ],
        'no-underscore-dangle': [ 'error', { allow: [], allowAfterThis: false, allowAfterSuper: false, enforceInMethodNames: false } ],
        'no-unneeded-ternary': [ 'error', { defaultAssignment: false } ],
        'no-whitespace-before-property': 'warn',
        'nonblock-statement-body-position': 'off',
        'object-curly-spacing': [ 'error', 'always' ],
        'object-curly-newline': [ 'off', { ObjectExpression: { minProperties: 3, multiline: true, consistent: true }, ObjectPattern: { minProperties: 3, multiline: true, consistent: true }, ImportDeclaration: { minProperties: 3, multiline: true, consistent: true }, ExportDeclaration: { minProperties: 3, multiline: true, consistent: true } } ],
        'object-property-newline': [ 'error', { allowMultiplePropertiesPerLine: true } ],
        'one-var': [ 'error', 'never' ],
        'one-var-declaration-per-line': [ 'error', 'always' ],
        'operator-assignment': [ 'error', 'always' ],
        'operator-linebreak': [ 'error', 'after' ],
        'padded-blocks': [ 'error', 'never', { allowSingleLineBlocks: true } ],
        'padding-line-between-statements': 'off',
        'prefer-object-spread': 'warn',
        'quote-props': [ 'error', 'as-needed', { keywords: true, unnecessary: false, numbers: false } ],
        'quotes': [ 'error', 'single', { avoidEscape: true } ],
        'require-jsdoc': 'off',
        'semi': [ 'error', 'always' ],
        'semi-spacing': [ 'error', { before: false, after: true } ],
        'semi-style': [ 'off', 'last' ],
        'sort-keys': [ 'off', 'asc', { caseSensitive: false, natural: true } ],
        'sort-vars': 'off',
        'space-before-blocks': [ 'error', { functions: 'always', keywords: 'always', classes: 'always' } ],
        'space-before-function-paren': [ 'error', { anonymous: 'always', named: 'never', asyncArrow: 'always' } ],
        'space-in-parens': [ 'error', 'never' ],
        'space-infix-ops': [ 'error', { int32Hint: false } ],
        'space-unary-ops': [ 'error', { words: true, nonwords: false, overrides: {} } ],
        'spaced-comment': [ 'error', 'always', { line: { exceptions: [ '-', '+' ], markers: [ '=', '!' ] }, block: { exceptions: [ '-', '+' ], markers: [ '=', '!' ], balanced: true } } ],
        'switch-colon-spacing': [ 'warn', { after: true, before: false } ],
        'template-tag-spacing': [ 'warn', 'never' ],
        'unicode-bom': [ 'error', 'never' ],
        'wrap-regex': 'off',

        // variables
        'init-declarations': 'off',
        'no-catch-shadow': 'error',
        'no-delete-var': 'error',
        'no-label-var': 'error',
        'no-restricted-globals': [ 'error', 'isFinite', 'isNaN' ].concat(confusingBrowserGlobals),
        'no-shadow': [ 'error', { builtinGlobals: false, hoist: 'all', allow: [] } ],
        'no-shadow-restricted-names': 'error',
        'no-undef': 'error',
        'no-undef-init': 'off',
        'no-undefined': 'off',
        'no-unused-vars': [ 'off', { vars: 'local', args: 'after-used', ignoreRestSiblings: true } ],
        'no-use-before-define': [ 'error', { functions: true, classes: true, variables: true } ],
    },

    settings: {
        'import/resolver': {
            node: {
                extensions: [ '.mjs', '.js', '.json' ],
            },
        },
        'import/extensions': [
            '.js',
            '.mjs',
        ],
        'import/core-modules': [],
        'import/ignore': [
            'node_modules',
            '\\.(coffee|scss|css|less|hbs|svg|json)$',
        ],
    },
};
